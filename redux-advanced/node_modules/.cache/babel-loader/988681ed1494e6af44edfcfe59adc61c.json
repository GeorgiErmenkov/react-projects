{"ast":null,"code":"var _jsxFileName = \"/home/georgi/projects/react-projects/redux-advanced/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending..',\n        message: 'Sending caart data'\n      }));\n      const response = await fetch('https://react-http-62394-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('sending cart data failed.');\n      }\n\n      ;\n    };\n\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success',\n      message: 'Sent cart data successfully!'\n    }));\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed ! '\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"M1A++yNtoifZBUfaWzkNdOhatC4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/georgi/projects/react-projects/redux-advanced/src/App.js"],"names":["Cart","Layout","Products","useSelector","useDispatch","useEffect","uiActions","App","dispatch","showCart","state","ui","cartIsVisible","cart","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAA5B;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAG,YAAY;AAC/BN,MAAAA,QAAQ,CAACF,SAAS,CAACS,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAC,SAD2B;AAElCC,QAAAA,KAAK,EAAE,WAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAOF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACAC,QAAAA,MAAM,EAAE,KADR;AAEAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAFN,OAF0B,CAA5B;;AAMA,UAAG,CAACM,QAAQ,CAACM,EAAb,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACC;;AAAA;AACF,KAjBD;;AAkBAlB,IAAAA,QAAQ,CAACF,SAAS,CAACS,gBAAV,CAA2B;AAClCC,MAAAA,MAAM,EAAC,SAD2B;AAElCC,MAAAA,KAAK,EAAE,SAF2B;AAGlCC,MAAAA,OAAO,EAAE;AAHyB,KAA3B,CAAD,CAAR;AAMFJ,IAAAA,YAAY,GAAGa,KAAf,CAAqBC,KAAK,IACxB;AACEpB,MAAAA,QAAQ,CAACF,SAAS,CAACS,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAC,OAD2B;AAElCC,QAAAA,KAAK,EAAE,QAF2B;AAGlCC,QAAAA,OAAO,EAAE;AAHyB,OAA3B,CAAD,CAAR;AAKD,KAPH;AASC,GAlCQ,EAkCN,CAACL,IAAD,EAAOL,QAAP,CAlCM,CAAT;AAqCA,sBACE,QAAC,MAAD;AAAA,eACGC,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjDQF,G;UAEUH,W,EACAD,W,EACJA,W;;;KAJNI,G;AAmDT,eAAeA,GAAf","sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { uiActions } from './store/ui-slice';\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status:'pending',\n        title: 'Sending..',\n        message: 'Sending caart data'\n      }));\n\n\n    const response = await fetch(\n      'https://react-http-62394-default-rtdb.firebaseio.com/cart.json', \n      {\n      method: 'PUT',\n      body: JSON.stringify(cart),\n    });\n    if(!response.ok) {\n      throw new Error('sending cart data failed.');\n      };\n    }\n    dispatch(uiActions.showNotification({\n      status:'success',\n      title: 'Success',\n      message: 'Sent cart data successfully!'\n    }));\n\n  sendCartData().catch(error =>\n    {\n      dispatch(uiActions.showNotification({\n        status:'error',\n        title: 'Error!',\n        message: 'Sending cart data failed ! '\n      }));\n    })\n\n  }, [cart, dispatch]);\n\n  \n  return (\n    <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}